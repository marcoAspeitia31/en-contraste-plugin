{"version":3,"file":"index.js","mappings":"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","sources":["webpack://blocks/./posts/src/edit.js","webpack://blocks/external window \"React\"","webpack://blocks/external window [\"wp\",\"apiFetch\"]","webpack://blocks/external window [\"wp\",\"blockEditor\"]","webpack://blocks/external window [\"wp\",\"blocks\"]","webpack://blocks/external window [\"wp\",\"components\"]","webpack://blocks/external window [\"wp\",\"element\"]","webpack://blocks/webpack/bootstrap","webpack://blocks/webpack/runtime/compat get default export","webpack://blocks/webpack/runtime/define property getters","webpack://blocks/webpack/runtime/hasOwnProperty shorthand","webpack://blocks/webpack/runtime/make namespace object","webpack://blocks/./posts/src/index.js"],"sourcesContent":["/**\n * The edit function describes the structure of your block in the context\n * of the editor. This represents what the editor will render when the\n * block is used.\n * \n * @link https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/\n * @sice 1.0.0\n */\nimport apiFetch from '@wordpress/api-fetch'\nimport { useState, useEffect } from '@wordpress/element'\nimport { InspectorControls, useBlockProps, RichText } from '@wordpress/block-editor';\nimport { Panel, PanelBody, PanelRow, RangeControl } from '@wordpress/components';\n\nconst Edit = props => {\n\n    const {\n        attributes: {\n            title,\n            content,\n            per_page\n        },\n        setAttributes\n    } = props\n\n    const blockProps = useBlockProps()\n\n    /**\n     * useState Returns a stateful value, and a function to update it.\n     * \n     * During the initial render, the returned state (posts) is the same\n     * as the value passed as the first argument ( [] ). (empty array)\n     * \n     * The setPosts is used to update the state.\n     * It accepts a new state value and enqueues a re-render of the component.\n     * \n     * @link https://reactjs.org/docs/hooks-reference.html#usestate\n     * @since 1.0.0\n     */\n    const [ posts, setPosts ] = useState( [] )\n\n    const fetchPosts = async () => {\n\n        if ( per_page === undefined ) {\n            setAttributes( { per_page: 3 } )\n        }\n\n        const path = `wp/v2/posts?per_page=${per_page}`\n        const newPosts = await apiFetch( { path } )\n        setPosts( newPosts )\n\n    }\n\n    useEffect( () => {\n        fetchPosts()\n    }, [ per_page ] )\n\n    const onChangePostsPerPage = newPerPage => { setAttributes( { per_page: newPerPage } ) }\n    const onChangeTitle = newTitle => { setAttributes( { title: newTitle } ) }\n    const onChangeContent = newContent => { setAttributes( { content: newContent } ) }\n\n    return(\n        <>\n            <InspectorControls>\n                <Panel header=\"Últimos posts\">\n                    <PanelBody\n                        title=\"Cantidad de Posts a mostrar\"\n                        icon=\"welcome-widgets-menus\"\n                        initialOpen={ true }\n                    >\n                        <PanelRow>\n                            <RangeControl\n                                label=\"Número de posts\"\n                                value={ per_page }\n                                onChange={ onChangePostsPerPage }\n                                min={1}\n                                max={10}\n                                help=\"Elige la cantidad de posts a mostrar\"\n                            />\n                        </PanelRow>\n                    </PanelBody>\n                </Panel>\n            </InspectorControls>\n            {\n                posts.length > 0 &&\n                <div { ...blockProps } >\n                    <section class=\"article-area\">\n                        <div class=\"container\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-lg-6 col-md-9\">\n                                    <div class=\"section-title text-center\">\n                                        <RichText\n                                            tagName='h2'\n                                            className='title'\n                                            value={ title }\n                                            onChange={ onChangeTitle }\n                                            placeholder='Agrega un título'\n                                        />\n                                        <RichText\n                                            tagName='p'\n                                            value={ content }\n                                            onChange={ onChangeContent }\n                                            placeholder='Agrega un descripción'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row justify-content-center\">\n                                {\n                                    posts.map( ( post ) => {\n                                        \n                                        const timestampDate = moment(post.date)\n                                        const month = timestampDate.format('MMM')\n                                        const day   = timestampDate.format('D')\n                                        const year  = timestampDate.format('YYYY')\n                                        const parser = new DOMParser()\n                                        const excerpt = parser.parseFromString( post.excerpt.rendered, \"text/html\" )\n                                        let excerptRendered = excerpt.documentElement.textContent\n\n                                        if( excerptRendered.length > 100 ){\n                                            excerptRendered = `${excerptRendered.substring( 0, 100 )}...`\n                                        }\n\n                                        return(\n                                            <div class=\"col-lg-4 col-md-6 col-sm-9\" key={ post.id }>\n                                                <div class=\"article-item mt-30\">\n                                                    <div class=\"article-top text-center\">\n                                                        <a href={ post.link }><h4>{ post.title.rendered }</h4></a>\n                                                    </div>\n                                                    <div class=\"article-thumb\">\n                                                        <a href={ post.link }><img src={ post.featured_image_src } alt=\"\"/></a>\n                                                        <div class=\"date\">\n                                                            <span class=\"title\">{ day }</span>\n                                                            <span>{ month }</span>\n                                                            <span>{ year }</span>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"article-content pl-25 pr-25 pt-25\">\n                                                        <p>{ excerptRendered }</p>\n                                                        <a href={ post.link }>Leer más</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )\n                                    } )\n                                }\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Edit","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport meta from \"../block.json\"\nimport edit from \"./edit\"\n\nregisterBlockType( meta, {\n    edit,\n    save: () => null\n} )\n"],"names":["apiFetch","useState","useEffect","InspectorControls","useBlockProps","RichText","Panel","PanelBody","PanelRow","RangeControl","Edit","props","attributes","title","content","per_page","setAttributes","blockProps","posts","setPosts","fetchPosts","undefined","path","newPosts","onChangePostsPerPage","newPerPage","onChangeTitle","newTitle","onChangeContent","newContent","createElement","Fragment","header","icon","initialOpen","label","value","onChange","min","max","help","length","class","tagName","className","placeholder","map","post","timestampDate","moment","date","month","format","day","year","parser","DOMParser","excerpt","parseFromString","rendered","excerptRendered","documentElement","textContent","substring","key","id","href","link","src","featured_image_src","alt","registerBlockType","meta","edit","save"],"sourceRoot":""}